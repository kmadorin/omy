generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model YieldOpportunity {
  id           String   @id
  name         String
  content      String?
  apy          Float
  type         String   @map("metadata_type")
  network      String   @map("token_network")
  tokenSymbol  String   @map("token_symbol")
  tokenAddress String?  @map("token_address")
  providerId   String   @map("provider_id")
  providerName String   @map("provider_name")
  protocol     String   @default("")
  asset        String   @default("")
  tvl          Float    @default(0)
  cooldownDays Int?     @map("cooldown_days")
  warmupDays   Int?     @map("warmup_days")
  withdrawDays Int?     @map("withdraw_days")
  canEnter     Boolean  @default(true) @map("can_enter")
  canExit      Boolean  @default(true) @map("can_exit")
  createdAt    DateTime @default(now()) @map("created_at")
  isAvailable  Boolean  @default(true) @map("is_available")
  rewardType   String   @map("reward_type")
  updatedAt    DateTime @map("updated_at")
}

model PortfolioPosition {
  id                 String    @id @map("id")
  yieldOpportunityId String    @map("yield_opportunity_id")
  amount             Float     @map("amount")
  entryDate          DateTime  @map("entry_date")
  lastModified       DateTime  @updatedAt @map("last_modified")
  currentApy         Float     @map("current_apy")
  isActive           Boolean   @default(true) @map("is_active")
  exitTxHash         String?   @map("exit_tx_hash")
  entryTxHash        String?   @map("entry_tx_hash")
  tokenAddress       String?   @map("token_address")
  tokenSymbol        String    @map("token_symbol")
  walletAddress      String    @map("wallet_address")
  integrationId      String    @map("integration_id")
  lastBalanceSync    DateTime? @map("last_balance_sync")

  @@unique([walletAddress, integrationId])
  @@map("portfolio_position")
}

model PortfolioRebalance {
  id                 String   @id
  fromPositionId     String   @map("from_position_id")
  toPositionId       String   @map("to_position_id")
  amount             Float
  executedAt         DateTime @map("executed_at")
  fromApy            Float    @map("from_apy")
  toApy              Float    @map("to_apy")
  gasCost            Float    @map("gas_cost")
  annualIncomeChange Float    @map("annual_income_change")

  @@map("portfolio_rebalance")
}

model PortfolioTransaction {
  id            String             @id @default(dbgenerated("uuid_generate_v4()"))
  walletAddress String             @map("wallet_address")
  integrationId String             @map("integration_id")
  direction     PortfolioDirection
  amount        Decimal
  txHash        String             @unique @map("tx_hash")
  executedAt    DateTime           @map("executed_at")

  @@index([walletAddress])
  @@map("portfolio_transaction")
}

enum PortfolioDirection {
  ENTER
  EXIT
  CORRECTION
}
